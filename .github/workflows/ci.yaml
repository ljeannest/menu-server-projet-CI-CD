name: CI
on:
  - push
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - run: mvn package
      - uses: actions/upload-artifact@v2
        with:
          name: menu-server
          path: target/menuserver-1.0-SNAPSHOT.jar

  tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      
        
  release:
    needs: [build,tests]
#    if: contains(github.ref , 'refs/tags/v')
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: menu-server
          path: ./releaseAsset
 
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This vnbpulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./releaseAsset/menuserver-1.0-SNAPSHOT.jar
          asset_name: menuserver-1.0.jar
          asset_content_type: application/java-archive
  
  release-heroku:
    needs: [build,tests,release]
#    if: contains(github.ref , 'refs/tags/v')
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
#        with:
#          name: menuserver-1.0
#          path: ./releaseAsset

      - name : Login to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: | 
          heroku container:login
          heroku container:push web --app menu-server-jmz
